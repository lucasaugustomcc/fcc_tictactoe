/* ASSIGNMENT */

Build a Tic Tac Toe Game

Objective: Build a CodePen.io app that is functionally similar to this: https://codepen.io/FreeCodeCamp/full/KzXQgy/.

Fulfill the below user stories. Use whichever libraries or APIs you need. Give it your own personal style.

- User Story: I can play a game of Tic Tac Toe with the computer.

- User Story: My game will reset as soon as it's over so I can play again.

- User Story: I can choose whether I want to play as X or O.


/* DESIGN NOTES */

markers will be black
purple background

https://www.iconsdb.com/black-icons/circle-outline-icon.html
https://upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Sinal_de_vezes.svg/200px-Sinal_de_vezes.svg.png

- want a way to indicate who's turn it is (x or o)
- want to display winner or draw at end of game
- want to display line through the 3 marks in a row when one player wins


Color pallete: http://paletton.com/#uid=54W0u0krZtneaRGlkAmu9jrDL5z

Fonts: 
<link href="https://fonts.googleapis.com/css?family=Hind:400,600" rel="stylesheet">

font-family: 'Hind', sans-serif;

/* PSEUDOCODE */

If user selects X, computer plays as O. 
Else, computer plays as X.

Once player selects marker, game board displays.

designate each box it's own value? 
a1, a2, a3
b1, b2, b3
c1, c2, c3 

or 1-9 

What will be logic to have program block ?? 

User always goes first. 
User clicks on box (class '.boxes'; id = "box_" where _ = number from 1-9)
    use "this" to display icon in the correct place 
    
If uneven number of boxes are filled, computer plays.     
    
Then computer's turn plays:
    if user went in corner (box1, box3, box7, box9), computer should go in opposite corner
    if user played center square (box5), computer can choose any corner
    
if user has any two in a row (e.g. 1) box1 + box2, 2) box2 + box3, 3) box2 + box5), computer should block (e.g. 1) box3, 2) box1, 3) box8).     

From wikipedia: "Player O must always respond to a corner opening with a center mark, and to a center opening with a corner mark. An edge opening must be answered either with a center mark, a corner mark next to the X, or an edge mark opposite the X. Any other responses will allow X to force the win. Once the opening is completed, O's task is to follow the above list of priorities in order to force the draw, or else to gain a win if X makes a weak play."
